name: Auto Update Dependencies

on:
  schedule:
    # Run weekly on Mondays at 00:00 UTC
    - cron: "0 0 * * 1"
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Update dependencies
        id: update
        run: |
          echo "::group::Update Dependencies"

          # Sync current dependencies
          uv sync --extra dev

          # Upgrade all dependencies
          uv lock --upgrade

          # Sync with upgraded dependencies
          uv sync --extra dev

          # Check if there are any changes
          if git diff --quiet uv.lock; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No dependency updates available"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Dependencies have been updated"

            # Show what changed
            git diff uv.lock
          fi

          echo "::endgroup::"

      - name: Run quality checks
        if: steps.update.outputs.changed == 'true'
        run: |
          echo "::group::Quality Checks"

          # Format check
          echo "Running format check..."
          uv run ruff format --check . || {
            echo "Format check failed, applying formatting..."
            uv run ruff format .
          }

          # Lint check
          echo "Running lint check..."
          uv run ruff check . --fix || {
            echo "Lint issues found"
            exit 1
          }

          # Type check
          echo "Running type check..."
          uv run pyright || {
            echo "Type check failed"
            exit 1
          }

          # Complexity check
          echo "Running complexity check..."
          uv run lizard src/vtt2minutes --CCN 10 || {
            echo "Complexity check failed"
            exit 1
          }

          echo "::endgroup::"

      - name: Run tests
        if: steps.update.outputs.changed == 'true'
        run: |
          echo "::group::Test Suite"
          PYTEST_DISABLE_PLUGIN_AUTOLOAD="" uv run pytest --tb=short --cov=src/vtt2minutes
          echo "::endgroup::"

      - name: Security audit
        if: steps.update.outputs.changed == 'true'
        run: |
          echo "::group::Security Audit"
          uv run pip-audit --desc || echo "Security audit completed with warnings"
          echo "::endgroup::"
        continue-on-error: true

      - name: Generate update summary
        if: steps.update.outputs.changed == 'true'
        id: summary
        run: |
          echo "::group::Generate Summary"

          # Extract updated packages from lock file diff
          UPDATED_PACKAGES=$(git diff uv.lock | grep -E '^\+.*name = ' | sed 's/^+.*name = "\(.*\)"/- \1/' | sort -u || echo "- Multiple packages updated")

          # Create summary for PR body
          cat << 'EOF' > /tmp/pr-body.md
          ## Automated Dependency Update

          This PR updates project dependencies to their latest versions.

          ### Updated Packages

          EOF

          echo "$UPDATED_PACKAGES" >> /tmp/pr-body.md

          cat << 'EOF' >> /tmp/pr-body.md

          ### Testing

          - [x] All tests pass
          - [x] Code quality checks pass
          - [x] Type checking passes
          - [x] Security audit completed

          ### Notes

          This PR was automatically generated by the dependency update workflow.
          Please review the changes carefully before merging.
          EOF

          cat /tmp/pr-body.md
          echo "::endgroup::"

      - name: Create Pull Request
        if: steps.update.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore(deps): update dependencies

            Update all project dependencies to their latest versions.
            All tests and quality checks have passed.
          branch: automated/dependency-update
          delete-branch: true
          title: "chore(deps): Update dependencies"
          body-path: /tmp/pr-body.md
          labels: |
            dependencies
            automated
          reviewers: |
            jerome3o-anthropic
            jspahrsummers
          draft: false

      - name: Report status
        if: always()
        run: |
          if [ "${{ steps.update.outputs.changed }}" == "true" ]; then
            echo "✅ Dependencies updated and PR created"
          else
            echo "ℹ️ No dependency updates available"
          fi
